@page "/"
@using Data
@inject WhiskyService WhiskyService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager
@implements IDisposable

@if (_whiskys == null)
{
    <h1>Overview</h1>
}
else
{
    <h1>Overview of @_whiskys.Count Whisk(e)ys</h1>
}

@if (_whiskys == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="table-responsive">
        <table class="table" id="whiskyindex" style="display:none">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Type</th>
                    <th scope="col">Image</th>
                    <th class="text-right" scope="col">Age</th>
                    <th class="text-right" scope="col">Price</th>
                    <th class="text-center" scope="col">Rating</th>
                    <th class="text-right" scope="col">Last Pour</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var whisky in _whiskys)
                {
                    <tr>
                        <th scope="row"><a href="details/@whisky.Id">@whisky.Name</a></th>
                        <td>@whisky.Type; <nobr>@whisky.Alc% ABV</nobr>
                            @if (whisky.ArtColor)
                            {
                                <span class="badge badge-secondary" title="Artificial Color">AC</span>
                            }
                            @if (whisky.UnChillfiltered)
                            {
                                <span class="badge badge-secondary" title="Un-Chillfiltered">UCF</span>
                            }
                            @if (whisky.CaskStrength)
                            {
                                <span class="badge badge-secondary" title="Cask Strength">CS</span>
                            }
                            @if (whisky.SingleCask)
                            {
                                <span class="badge badge-secondary" title="Single Cask">SC</span>
                            }
                        </td>
                        <td><img height="150px" src="@whisky.ImageUrlTh"></td>
                        <td class="text-right">@whisky.Age</td>
                        <td class="text-right"><nobr>@whisky.Price?.ToString("###.00") â‚¬</nobr></td>
                        <td class="text-center">@whisky.Rating</td>
                        <td class="text-right" scope="col">
                            <nobr>@whisky.LastPour?.ToString("yy-MM-dd HH:mm")</nobr> @whisky.GetPoursString()
                        </td>
                        <td><button @onclick="() => PourOne(whisky.Id, whisky.Name, whisky.Type)" type="button"
                                class="btn btn-secondary">Pour
                                One</button></td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@if (showModal)
{
    <div class="modal fade show" id="myModal" style="display:block" aria-modal="true" role="dialog">
        <div class="modal-dialog">
            <div class="modal-content">

                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Confirm Pour</h4>
                    <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                </div>

                <!-- Modal body -->
                <div class="modal-body">
                    <em>Is it that time of day again?</em>
                    <p>@_name</p>
                </div>

                <!-- Modal footer -->
                <div class="modal-footer">
                    <button type="button" class="btn" @onclick="@ModalCancel">Cancel</button>
                    <button type="button" class="btn btn-danger" @onclick=@ModalOk>Pour me one!</button>
                </div>

            </div>
        </div>
    </div>
}

@code {
    bool showModal = false;
    private List<Whisky> _whiskys;
    private string _id;
    private string _name;

    protected override async Task OnInitializedAsync()
    {

        await WhiskyService.CleanImages();
        _whiskys = await WhiskyService.GetWhiskys();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if(firstRender)
            await JSRuntime.InvokeAsync<object>("DataTableWhiskyIndex", "#whiskyindex");
    }
    void IDisposable.Dispose()
    {
        JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#whiskyindex");
    }

    private async void PourOne(string id, string name, string type)
    {
        showModal = true;
        _id = id;
        _name = $"{name} {type}";

    }
    void ModalShow() => showModal = true;
    void ModalCancel() => showModal = false;
    async Task ModalOk()
    {
        _whiskys = await WhiskyService.PourOne(_id);
        StateHasChanged();
        await JSRuntime.InvokeAsync<object>("TestDataTablesRemove", "#whiskyindex");
        await JSRuntime.InvokeAsync<object>("DataTableWhiskyIndex", "#whiskyindex");
        @* await JSRuntime.InvokeAsync<object>("TableRedraw", "#whiskyindex"); *@
        await JSRuntime.InvokeAsync<object>("ScrollToTop");
        showModal = false;
        @* NavigationManager.NavigateTo("/"); *@
    }
}
